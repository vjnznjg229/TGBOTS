import telebot

from telebot import types
TOKEN=('7420849186:AAGMqf7IxRFeRGmwc5rHvTA-BqLs4LQs5Xk')
bot =telebot.TeleBot(TOKEN)
items_Fiber=[       '360‚ÇΩ-–§–ê–ô–ë–ï–† –î–õ–Ø –ú–´–¢–¨–Ø –ü–û–°–£–î–´ S1,20√ó16—Å–º',
    '420‚ÇΩ-–ì–£–ë–ö–ê –î–õ–Ø –ú–´–¢–¨–Ø –ü–û–°–£–î–´ S15,15,5√ó9—Å–º',
    '710‚ÇΩ-–§–ê–ô–ë–ï–† –£–ù–ò–í–ï–†–°–ê–õ A1,40√ó30—Å–º',
    '710‚ÇΩ-–î–ò–°–ö –ò–ù–í–û–õ–í–ï–† S2,√ò 12—Å–º',

    '790‚ÇΩ-–§–ê–ô–ë–ï–† –†–ï–ë–†–ò–°–¢–´–ô S3,30√ó30—Å–º',
    '730‚ÇΩ-–°–ö–†–ê–ë–ï–† –¢–í–ò–°–¢ S4,30√ó30—Å–º',
    '840‚ÇΩ-–§–ê–ô–ë–ï–† –í–ï–õ–¨–í–ï–¢–û–í–´–ô S5,40√ó40—Å–º',
    '720‚ÇΩ-–°–ü–û–ù–ñ –°–ü–õ–ò–¢–¢–ï–† S6,22√ó17,5—Å–º',

    '1130‚ÇΩ-–§–ê–ô–ë–ï–† –ò–ù–í–û–õ–í–ï–† S7,30√ó23—Å–º',
        '1000‚ÇΩ-–ì–£–ë–ö–ê –ò–ù–í–û–õ–í–ï–† S8,14,5√ó7—Å–º',
    '1030‚ÇΩ-–í–ê–†–ï–ñ–ö–ê –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø A2,27√ó20—Å–º',
        '1200‚ÇΩ-–§–ê–ô–ë–ï–† –î–õ–Ø –ö–£–•–ù–ò A3,60√ó40—Å–º',

        '1430‚ÇΩ-–í–ê–†–ï–ñ–ö–ê –¢–í–ò–°–¢ S9,25√ó19—Å–º',
        '1370‚ÇΩ-–í–ê–†–ï–ñ–ö–ê –ò–ù–í–û–õ–í–ï–† S10,23√ó21—Å–º',
        '530‚ÇΩ-–§–ê–ô–ë–ï–† –ü–û–õ–ò–†–£–Æ–©–ò–ô P2,40√ó30—Å–º',
        '1130‚ÇΩ-–°–ü–û–ù–ñ –ò–ù–í–û–õ–í–ï–† S11,26,5√ó15,5—Å–º',

        '780‚ÇΩ-–§–ê–ô–ë–ï–† –¢–í–ò–°–¢ S12,40√ó40—Å–º',
        '1140‚ÇΩ-–§–ê–ô–ë–ï–† –¢–í–ò–°–¢ –î–õ–Ø –ü–û–õ–ê S13,60√ó40—Å–º',
        '780‚ÇΩ-–°–ü–û–ù–ñ –¢–í–ò–°–¢ S14,30√ó16—Å–º',
        '650‚ÇΩ-–§–ê–ô–ë–ï–† –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ô A4,40√ó40—Å–º',

        '590‚ÇΩ-–§–ê–ô–ë–ï–† –î–õ–Ø –°–¢–ï–ö–õ–ê P1, 40 √ó 30 —Å–º',
        '210‚ÇΩ-–§–ê–ô–ë–ï–† –î–õ–Ø –û–ü–¢–ò–ö–ò P3,15√ó15—Å–º',
        '300‚ÇΩ-–§–ê–ô–ë–ï–† –î–õ–Ø –≠–ö–†–ê–ù–û–í P4,20√ó15—Å–º',

        '2150‚ÇΩ-–ù–ê–ë–û–† –î–õ–Ø –ß–ò–°–¢–ö–ò –°–õ–û–ñ–ù–´–• –ó–ê–ì–†–Ø–ó–ù–ï–ù–ò–ô Heavy-duty —Åleaning',
        '1990‚ÇΩ-–ù–ê–ë–û–† –î–õ–Ø –ö–£–•–ù–ò Kitchen cleaning',
        '2150‚ÇΩ-–ù–ê–ë–û–† –î–õ–Ø –û–ë–©–ï–ô –£–ë–û–†–ö–ò General cleaning',
        '2170‚ÇΩ-–ù–ê–ë–û–† –î–õ–Ø –£–ë–û–†–ö–ò –í–ê–ù–ù–û–ô Bathroom cleaning']
ITEMS_PER_RANGE=4
@bot.message_handler(commands=['start'])

def start(message):
    markup = types.InlineKeyboardMarkup(row_width=2)
    item1= types.InlineKeyboardButton('–ö–∞—Ç–∞–ª–æ–≥üåü',callback_data='1')
    item2 = types.InlineKeyboardButton('–ö–æ—Ä–∑–∏–Ω–∞üõí',callback_data='2')
    item3 = types.InlineKeyboardButton('–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞üõ†Ô∏è', callback_data='3')
    markup.add(item1,item2,item3)
    bot.send_message(message.chat.id,f'–ü—Ä–∏–≤–µ—Ç!–≠—Ç–æ –±–µ—Ç–∞ —Ç–µ—Å—Ç',reply_markup=markup)
@bot.callback_query_handler(func=lambda call:call.data in ['1','2','3'])
def vibor_menu(call):
    if call.data == '1':
        menu(call.message)
    if call.data =='2':
        pass
    if call.data== '3':
        bot.send_message(call.message.chat.id, '–¢–ì —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏ https://t.me/saltykodashok')


@bot.message_handler(commands=['2345165723'])
def menu(message):
        markup = types.InlineKeyboardMarkup(row_width=1)
        item4 = types.InlineKeyboardButton('–§–∞–π–±–µ—Ä—ã –∏ –≥—É–±–∫–∏.', callback_data='fpage_0')
        item5 = types.InlineKeyboardButton('---', callback_data='apage_0')
        item6 = types.InlineKeyboardButton('---', callback_data='bpage_0')
        markup.add(item4, item5, item6)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª.', reply_markup=markup)


def generate_markup(items,page=0):
    global letter
    markup=types.InlineKeyboardMarkup()
    start_index= page * ITEMS_PER_RANGE
    end_index = start_index + ITEMS_PER_RANGE


    for item in items[start_index:end_index]:
        button = types.InlineKeyboardButton(item,callback_data=f'item_{items.index(item)}')
        markup.add(button)

    if page > 0:
        markup.add(types.InlineKeyboardButton(text="<<",callback_data=f'{letter}page_{page - 1}'))

    if end_index < len(items):
        markup.add(types.InlineKeyboardButton(text=">>",callback_data=f'{letter}page_{page + 1}'))
    return markup
@bot.callback_query_handler(func=lambda call:'page_' in call.data)
def menu2(call):
    global letter
    if call.data.startswith('fpage_'):
        letter='f'
        print(3)
        Fiber(call,items_Fiber)
def Fiber(call,items):
    print(4)
    if 'page_' in call.data :
        text,page=call.data.split('_')

        markup = generate_markup(items,int(page))
        bot.edit_message_text(chat_id=call.message.chat.id,message_id=call.message.message_id,text='–í—ã–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞' ,
                              reply_markup=markup)

    elif call.data.startswith('item_'):
        text,item_index=call.data.split('_')
        bot.send_message(call.message.chat.id,text=item_index)

bot.polling(none_stop=True)
